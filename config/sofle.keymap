/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define extra_layer 4

&mt {
    quick-tap-ms = <175>;
    flavor = "balanced";
    require-prior-idle-ms = <150>;
    hold-trigger-on-release;
    hold-trigger-key-positions = <0 1 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53 54 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53 54 55 56 57>;
    tapping-term-ms = <280>;
};

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Launcher {
            if-layers = <4 3>;
            then-layer = <9>;
        };

        Button {
            if-layers = <3 2>;
            then-layer = <11>;
        };

        Power {
            if-layers = <4 2>;
            then-layer = <13>;
        };

        Lightroom {
            if-layers = <3 5>;
            then-layer = <10>;
        };

        Macro {
            if-layers = <2 5>;
            then-layer = <12>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Launcher_Layer {
            bindings = <&to 9>;
            key-positions = <52 53>;
            layers = <13>;
        };

        Button_Layer {
            bindings = <&to 13>;
            key-positions = <53 54>;
            layers = <13>;
        };

        lightroom {
            bindings = <&to 10>;
            key-positions = <32 33>;
            layers = <1>;
        };
    };

    behaviors {
        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <POUND MINUS BACKSPACE UNDERSCORE>;
        };
    };

    macros {
        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp A &kp M &kp W &kp A &kp L &kp L &kp A &kp C &kp K &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Miryoku_base {
            bindings = <
&kp PRINTSCREEN  &kp N1          &kp N2       &kp N3          &kp N4            &kp N5                                  &kp N6           &kp N7             &kp N8           &kp N9       &kp N0              &kp EQUAL
&kp GRAVE        &kp Q           &kp W        &kp E           &kp R             &kp T                                   &kp Y            &kp U              &kp I            &kp O        &kp P               &kp MINUS
&kp LSHFT        &mt LEFT_ALT A  &mt LCTRL S  &mt LEFT_GUI D  &mt LEFT_SHIFT F  &kp G                                   &kp H            &mt RIGHT_SHIFT J  &mt RIGHT_GUI K  &mt RCTRL L  &mt RIGHT_ALT SEMI  &kp SQT
&to 0            &kp Z           &kp X        &kp C           &kp V             &kp B        &mo 5        &none         &kp N            &kp M              &kp COMMA        &kp DOT      &kp FSLH            &kp RSHFT
                                 &to 1        &none           &lt 4 ESC         &lt 3 SPACE  &lt 2 TAB    &lt 7 RETURN  &lt 6 BACKSPACE  &lt 8 DELETE       &none            &to 1
            >;
        };

        Layers {
            bindings = <
&none  &none   &none   &none  &none   &none                  &none  &none  &none  &none  &none  &none
&none  &none   &none   &none  &none   &none                  &none  &none  &none  &none  &none  &none
&none  &to 10  &to 12  &to 9  &to 11  &none                  &none  &none  &none  &none  &none  &none
&to 0  &none   &none   &none  &none   &none  &to 5    &none  &none  &none  &none  &none  &none  &none
               &none   &none  &to 4   &to 3  &to 2    &to 7  &to 6  &to 8  &none  &none
            >;
        };

        Mouse {
            bindings = <
&none  &none           &none      &none      &none            &none                     &none       &none           &none           &none         &none            &none
&none  &kp H           &kp J      &kp K      &kp L            &none                     &kp K_REDO  &kp K_UNDO      &kp K_PASTE     &kp K_COPY    &kp K_CUT        &none
&none  &kp LEFT        &kp DOWN   &kp UP     &kp RIGHT        &none                     &mkp MB4    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &mkp MB5
&to 0  &msc SCRL_LEFT  &kp PG_DN  &kp PG_UP  &msc SCRL_RIGHT  &none  &mo 5    &none     &none       &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &none
                       &to 1      &none      &mo 4            &mo 3  &none    &mkp MB2  &mkp MB1    &mkp MB3        &none           &to 1
            >;
        };

        TWM {
            bindings = <
&mt LG(P) LG(B)  &kp LG(LC(LS(DOWN)))        &kp LG(LS(DOWN))  &kp LG(LS(UP))    &kp LG(LS(LC(UP)))  &mt LG(LS(F)) LG(F)                  &none      &kp LG(LC(N5))         &kp LG(LC(NUMBER_6))  &kp LG(LC(N7))        &kp LG(LC(A))         &none
&kp LG(COMMA)    &mt LG(LC(HOME)) LC(LG(J))  &kp LG(LC(K))     &kp LG(LC(I))     &kp LG(LC(L))       &kp LG(PERIOD)                       &kp LG(Y)  &kp LG(LC(NUMBER_1))   &kp LG(LC(NUMBER_2))  &kp LG(LC(NUMBER_3))  &kp LG(LC(NUMBER_4))  &none
&kp LG(G)        &mt LG(HOME) LG(LEFT)       &kp LG(DOWN)      &kp LG(UP)        &kp LG(RIGHT)       &mt LG(LS(H)) LG(H)                  &none      &kp LG(LC(PAGE_DOWN))  &kp LG(PG_DN)         &kp LG(PG_UP)         &kp LG(LC(PG_UP))     &none
&to 0            &kp LG(NUMBER_1)            &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)    &mt LG(LS(N)) LG(N)  &none    &none  &none      &kp LG(N5)             &kp LG(NUMBER_6)      &kp LG(N7)            &kp LG(NUMBER_4)      &kp LG(LS(L))
                                             &mo 1             &none             &mo 4               &none                &none    &none  &none      &none                  &none                 &mo 1
            >;
        };

        Nav {
            bindings = <
&none           &none         &none      &none         &none           &none                  &none         &none        &none       &none      &none       &none
&none           &none         &none      &none         &none           &none                  &kp K_UNDO    &kp K_PASTE  &kp K_COPY  &kp K_CUT  &kp K_REDO  &none
&kp LEFT_SHIFT  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_SHIFT  &none                  &kp CAPSLOCK  &kp LEFT     &kp DOWN    &kp UP     &kp RIGHT   &none
&to 0           &none         &none      &none         &none           &none  &none    &none  &kp INSERT    &kp HOME     &kp PG_DN   &kp PG_UP  &kp END     &none
                              &to 1      &none         &none           &mo 3  &mo 2    &none  &none         &none        &none       &to 1
            >;
        };

        Media {
            bindings = <
&none  &none       &none         &none            &none             &none                       &none             &none         &none         &none         &none     &none
&none  &none       &none         &none            &none             &none                       &none             &none         &kp C_BRI_DN  &kp C_BRI_UP  &none     &none
&none  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE  &none                       &kp C_PREV        &kp C_REWIND  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_FF  &kp C_NEXT
&to 0  &none       &none         &none            &none             &none  &none    &none       &none             &none         &none         &none         &none     &none
                   &to 1         &none            &none             &mo 3  &mo 2    &kp C_STOP  &kp C_PLAY_PAUSE  &kp C_MUTE    &none         &to 1
            >;
        };

        Num {
            bindings = <
&none            &none      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none    &kp COMMA                            &none       &none           &none           &none         &none            &none
&kp KP_PLUS      &kp EQUAL  &kp N7                &kp N8                 &kp N9   &kp DOT                              &kp K_REDO  &kp K_UNDO      &kp K_PASTE     &kp K_COPY    &kp K_CUT        &none
&kp KP_SUBTRACT  &kp RET    &kp N4                &kp N5                 &kp N6   &kp KP_MULTIPLY                      &none       &kp LEFT        &kp DOWN        &kp UP        &kp RIGHT        &none
&to 0            &kp N0     &kp N1                &kp N2                 &kp N3   &kp KP_DIVIDE    &none      &none    &none       &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &none
                            &mo 1                 &none                  &kp ESC  &kp SPACE        &kp TAB    &kp RET  &kp BSPC    &kp DEL         &none           &to 1
            >;
        };

        Symbol {
            bindings = <
&kp AT     &kp GRAVE           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON          &kp COMMA                         &none          &kp RIGHT_SHIFT  &kp RIGHT_GUI     &kp RCTRL          &kp RIGHT_ALT  &kp ESCAPE
&kp EXCL   &kp LEFT_BRACE      &kp APOSTROPHE        &kp DOUBLE_QUOTES      &kp RIGHT_BRACE        &kp QUESTION                      &none          &kp DEL          &kp LS(TAB)       &none              &kp ESCAPE     &none
&kp POUND  &mt LEFT_ALT CARET  &mt LCTRL KP_EQUAL    &mt LEFT_GUI UNDER     &mt LEFT_SHIFT DOLLAR  &kp ASTERISK                      &kp PERCENT    &kp BSPC         &kp TAB           &kp SPACE          &kp RET        &none
&kp TILDE  &kp LESS_THAN       &kp PIPE              &kp KP_MINUS           &kp GREATER_THAN       &kp FSLH      &to 0        &none  &kp BACKSLASH  &kp PLUS         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp AMPERSAND  &kp AT
                               &mo 1                 &to 0                  &kp SEMICOLON          &kp PERIOD    &kp COLON    &none  &none          &none            &to 0             &to 1
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        Fun {
            bindings = <
&none  &none  &kp F10  &kp F11  &kp F12  &none                  &none  &none  &none  &none  &none  &none
&none  &none  &kp F7   &kp F8   &kp F9   &none                  &none  &none  &none  &none  &none  &none
&none  &none  &kp F4   &kp F5   &kp F6   &none                  &none  &none  &none  &none  &none  &none
&to 0  &none  &kp F1   &kp F2   &kp F3   &none  &none    &none  &none  &none  &none  &none  &none  &none
              &to 1    &none    &none    &none  &none    &none  &none  &none  &none  &to 1
            >;
        };

        Launcher {
            bindings = <
&none          &none          &none          &none              &none          &none                          &none          &none  &none  &none  &kp LC(LA(P))  &none
&none          &none          &kp LA(L)      &kp LC(LA(LS(K)))  &none          &kp LC(LA(O))                  &none          &none  &none  &none  &none          &none
&kp LC(LA(I))  &kp LC(LA(J))  &kt LC(LA(U))  &kp LC(LA(K))      &kp LG(SPACE)  &kp LC(LA(M))                  &kp LC(LA(Y))  &none  &none  &none  &none          &none
&to 0          &kp LC(LA(H))  &none          &none              &none          &none          &none    &none  &none          &none  &none  &none  &none          &none
                              &to 1          &none              &none          &none          &none    &none  &none          &none  &none  &to 1
            >;
        };

        lightroom {
            bindings = <
&none  &none  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&to 0  &none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none  &none
              &none  &none  &none  &none  &none    &none  &none  &none  &none  &none
            >;
        };

        button {
            bindings = <
&kp PRINTSCREEN  &kp K_CUT  &kp K_COPY     &kp K_PASTE   &kp K_UNDO          &kp K_REDO                     &none  &none  &none  &none  &none  &none
&kp LG(Q)        &kp LC(W)  &kp DELETE     &kp LC(R)     &kp LA(LC(TAB))     &kp LC(T)                      &none  &none  &none  &none  &none  &none
&kp K_BACK       &kp HOME   &kp PAGE_DOWN  &kp PG_UP     &kp END             &kp K_FORWARD                  &none  &none  &none  &none  &none  &none
&to 0            &kp LC(A)  &kp LC(MINUS)  &kp LC(PLUS)  &kp K_CONTEXT_MENU  &kp K_FIND     &none    &none  &none  &none  &none  &none  &none  &none
                            &to 1          &none         &none               &none          &none    &none  &none  &none  &none  &to 1
            >;
        };

        Macro {
            bindings = <
&none  &none  &none  &none  &none  &none                  &none  &none   &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                  &none  &none   &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                  &none  &email  &none  &none  &none  &none
&to 0  &none  &none  &none  &none  &none  &none    &none  &none  &none   &none  &none  &none  &none
              &to 1  &none  &none  &none  &none    &none  &none  &none   &none  &to 1
            >;
        };

        Power {
            bindings = <
&bt BT_CLR_ALL  &none  &none  &none  &none  &studio_unlock                  &none         &none         &none         &none         &none         &kp C_SLEEP
&none           &none  &none  &none  &none  &none                           &none         &none         &none         &none         &none         &none
&none           &none  &none  &none  &none  &none                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&to 0           &none  &none  &none  &none  &none           &none    &none  &none         &none         &none         &none         &none         &none
                       &none  &none  &none  &none           &none    &none  &none         &none         &none         &none
            >;
        };

        default_layer {
            bindings = <
&gresc            &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                          &kp N6  &kp N7     &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB           &kp Q   &kp W     &kp E     &kp R      &kp T                           &kp Y   &kp U      &kp I      &kp O     &kp P     &kp BSPC
&kp LEFT_SHIFT    &kp A   &kp S     &kp D     &kp F      &kp G                           &kp H   &kp J      &kp K      &kp L     &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z   &kp X     &kp C     &kp V      &kp B   &kp LBKT     &kp RBKT   &kp N   &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
                          &kp LGUI  &kp LALT  &kp LCTRL  &mo 0   &kp SPACE    &kp ENTER  &mo 15  &kp RCTRL  &kp LALT   &kp RGUI
            >;

            display-name = "olddefault";
            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            display-name = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans  &kp F1     &kp F2     &kp F3    &kp F4    &kp F5                       &kp F6          &kp F7         &kp F8          &kp F9                &kp F10                &kp F11
&trans  &kp N1     &kp N2     &kp N3    &kp N4    &kp N5                       &kp CARET       &kp AMPERSAND  &kp ASTRK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp F12
&trans  &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT                    &kp MINUS       &kp EQUAL      &kp ASTRK       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE
&trans  &kp EQUAL  &kp MINUS  &kp PLUS  &kp LBRC  &kp RBRC   &trans    &trans  &kp UNDERSCORE  &kp PLUS       &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp PIPE               &trans
                   &trans     &trans    &trans    &trans     &trans    &trans  &trans          &trans         &trans          &trans
            >;

            sensor-bindings =
                <&inc_dec_kp LEFT_ARROW RIGHT_ARROW>,
                <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        raise_layer {
            display-name = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&trans  &trans      &trans     &trans       &trans       &trans                      &trans     &trans    &trans    &trans     &trans   &trans
&trans  &kp INS     &kp PSCRN  &kp K_CMENU  &trans       &trans                      &kp PG_UP  &trans    &kp UP    &trans     &kp N0   &trans
&trans  &kp LALT    &kp LCTRL  &kp LSHFT    &trans       &kp CLCK                    &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL  &kp BSPC
&trans  &kp K_UNDO  &kp K_CUT  &kp K_COPY   &kp K_PASTE  &trans    &trans    &trans  &trans     &trans    &trans    &trans     &trans   &trans
                    &trans     &trans       &trans       &trans    &trans    &trans  &trans     &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            display-name = "adjust";
            bindings = <
&bt BT_CLR_ALL     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &none         &none         &none         &none         &none         &kp C_SLEEP
&ext_power EP_TOG  &none         &none         &none         &none         &studio_unlock                  &none         &none         &none         &none         &none         &none
&none              &none         &none         &none         &none         &none                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none              &none         &none         &none         &none         &caps_word      &none    &none  &none         &none         &none         &none         &none         &none
                                 &none         &none         &none         &none           &none    &none  &none         &none         &none         &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        extra_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            display-name = "extra1";
            bindings = <
&none  &none  &none  &none  &none  &none                           &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &studio_unlock                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                           &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &caps_word      &none    &none  &none  &none  &none  &none  &none  &none
              &none  &none  &none  &none           &none    &none  &none  &none  &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        test {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp A   &kp S   &kp D   &kp F                     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            label = "label";
        };
    };
};
